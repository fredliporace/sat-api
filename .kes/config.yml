default:
  stackName: sat-api-v1-dev

  buckets:
    internal: cbers-sat-api

  tags:
    project: sat-api

  capabilities:
    - CAPABILITY_IAM

  es:
    name: es6
    version: '6.0'
    instanceCount: 2
    instanceType: t2.small.elasticsearch
    volumeSize: 10

  apis:
    - name: stac

  lambdas:
    - name: landsat
      source: 'dist/landsat/'
      handler: index.handler
      timeout: 300
      memory: 1024
      envs:
        ES_HOST: "!GetAtt {{es.name}}Domain.DomainEndpoint"
    - name: sentinel
      source: 'dist/sentinel/'
      handler: index.handler
      timeout: 300
      memory: 512
      envs:
        ES_HOST: "!GetAtt {{es.name}}Domain.DomainEndpoint"
    - name: ingest
      source: 'dist/ingest/'
      handler: index.handler
      timeout: 300
      memory: 1024
      envs:
        bucket: '{{buckets.internal}}'
        prefix: '{{stackName}}'
        #landsat_arn: "!GetAtt LandsatMetadataProcessorStateMachine.Arn"
        #sentinel_arn: "!GetAtt sentinelLambdaFunction.Arn"
    - name: manager
      source: 'dist/manager/'
      handler: index.handler
      timeout: 300
      memory: 192
      envs:
        ES_HOST: "!GetAtt {{es.name}}Domain.DomainEndpoint"
        ES_ARN: "!GetAtt {{es.name}}Domain.DomainArn"
        ROLE_ARN: "!GetAtt LambdaRole.Arn"
        BUCKET: "{{buckets.internal}}"
    - name: api
      source: 'dist/api/'
      handler: index.handler
      timeout: 100
      envs:
        ES_HOST: "!GetAtt {{es.name}}Domain.DomainEndpoint"
      apiGateway:
        - api: stac
          path: '{proxy+}'
          method: get
          cors: true

production:
  stackName: sat-api-v1

